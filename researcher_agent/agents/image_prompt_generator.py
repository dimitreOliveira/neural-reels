from google.adk.agents import Agent
from pydantic import BaseModel, Field

MODEL_ID = "gemini-2.5-flash-preview-05-20"


IMAGE_PROMPT_GENERATOR_PROMPT = """
Based on the following script, generate image generation prompts.
Each prompt should be highly descriptive, focusing on visual elements, style, and mood suitable for the script.
Ensure the prompts are optimized for an AI image generation model like Imagen.
Break down the script into multiple scenes sequentially (each with around 5 to 10 seconds of video).
You should create prompts for those scenes following the same order of the script.
Create only a single image prompt for each scene, the intro and outro of the video will be handled by another agent.


# Output format
[
"Scene 1 image prompt goes here"
"Scene 2 image prompt goes here"
"Scene 3 image prompt goes here"
...
"Scene N image prompt goes here"
]


# Script generated by the script writer agent:
{script}


If the user approves it or if you don't know how to handle the request handle it back the to the orchestrator [OrchestratorAgent],
other wise iterate with the user to update the result.
"""


class ImagePromptsOutput(BaseModel):
    image_prompts: list[str] = Field(
        description="The image generation prompts used to generate the images for the short video content."
    )


image_prompt_generator_agent = Agent(
    name="ImagePromptGeneratorAgent",
    description="Generates image prompts to illustrate a script.",
    instruction=IMAGE_PROMPT_GENERATOR_PROMPT,
    model=MODEL_ID,
    include_contents="none",
    output_key="image_prompts",
    output_schema=ImagePromptsOutput,
    disallow_transfer_to_parent=True,
    disallow_transfer_to_peers=True,
    # after_agent_callback=save_agent_output,
)
