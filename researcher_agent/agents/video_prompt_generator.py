from google.adk.agents import Agent
from pydantic import BaseModel, Field

from researcher_agent.callbacks.callbacks import save_agent_output

MODEL_ID = "gemini-2.5-flash"

VIDEO_PROMPT_GENERATOR_PROMPT = """
Based on the following script, generate video generation prompts.
Each prompt should be highly descriptive, focusing on visual elements, style, and mood suitable for the script.
Ensure the prompts are optimized for an AI video generation model like Veo.
You should only create prompts for intro hook and outro (video ending).


# Output format

Intro: [Video prompt goes here]

Outro: [Video prompt goes here]


# Script generated by the script writer agent:
{script}


If the user approves it or if you don't know how to handle the request handle it back the to the orchestrator [OrchestratorAgent],
other wise iterate with the user to update the result.
"""


class VideoPromptsOutput(BaseModel):
    intro_video_prompt: str = Field(
        description="The video generation prompt used to generate the intro video for the short video content."
    )
    outro_video_prompt: str = Field(
        description="The video generation prompt used to generate the outro video for the short video content."
    )


video_prompt_generator_agent = Agent(
    name="VideoPromptGeneratorAgent",
    description="Generates video prompts to illustrate a script.",
    instruction=VIDEO_PROMPT_GENERATOR_PROMPT,
    model=MODEL_ID,
    include_contents="none",
    output_key="video_prompts",
    output_schema=VideoPromptsOutput,
    disallow_transfer_to_parent=True,
    disallow_transfer_to_peers=True,
    after_agent_callback=save_agent_output,
)
